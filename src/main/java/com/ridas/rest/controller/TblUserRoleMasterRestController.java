/*
 * Created on 29 Feb 2016 ( Time 17:45:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.ridas.bean.TblUserRoleMaster;
import com.ridas.business.service.TblUserRoleMasterService;
import com.ridas.web.listitem.TblUserRoleMasterListItem;

/**
 * Spring MVC controller for 'TblUserRoleMaster' management.
 */
@Controller
public class TblUserRoleMasterRestController {

	@Resource
	private TblUserRoleMasterService tblUserRoleMasterService;
	
	@RequestMapping( value="/items/tblUserRoleMaster",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TblUserRoleMasterListItem> findAllAsListItems() {
		List<TblUserRoleMaster> list = tblUserRoleMasterService.findAll();
		List<TblUserRoleMasterListItem> items = new LinkedList<TblUserRoleMasterListItem>();
		for ( TblUserRoleMaster tblUserRoleMaster : list ) {
			items.add(new TblUserRoleMasterListItem( tblUserRoleMaster ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tblUserRoleMaster",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TblUserRoleMaster> findAll() {
		return tblUserRoleMasterService.findAll();
	}

	@RequestMapping( value="/tblUserRoleMaster/{userRoleId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblUserRoleMaster findOne(@PathVariable("userRoleId") String userRoleId) {
		return tblUserRoleMasterService.findById(userRoleId);
	}
	
	@RequestMapping( value="/tblUserRoleMaster",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblUserRoleMaster create(@RequestBody TblUserRoleMaster tblUserRoleMaster) {
		return tblUserRoleMasterService.create(tblUserRoleMaster);
	}

	@RequestMapping( value="/tblUserRoleMaster/{userRoleId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblUserRoleMaster update(@PathVariable("userRoleId") String userRoleId, @RequestBody TblUserRoleMaster tblUserRoleMaster) {
		return tblUserRoleMasterService.update(tblUserRoleMaster);
	}

	@RequestMapping( value="/tblUserRoleMaster/{userRoleId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("userRoleId") String userRoleId) {
		tblUserRoleMasterService.delete(userRoleId);
	}
	
}
