/*
 * Created on 29 Feb 2016 ( Time 17:45:55 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.rest.controller;

import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.codehaus.jackson.map.ObjectMapper;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.ridas.bean.TblBusiAssoMaster;
import com.ridas.bean.TblMembershipForm;
import com.ridas.bean.TblReceiptMaster;
import com.ridas.business.service.TblBusiAssoMasterService;
import com.ridas.business.service.TblMembershipFormService;
import com.ridas.business.service.TblReceiptMasterService;
import com.ridas.common.CommonUtil;
import com.ridas.web.listitem.TblBusiAssoMasterListItem;


/**
 * Spring MVC controller for 'TblBusiAssoMaster' management.
 */
@Controller
public class TblBusiAssoMasterRestController {

	@Resource
	private TblBusiAssoMasterService tblBusiAssoMasterService;
	
	@Resource
	private TblReceiptMasterService tblReceiptMasterService;
	
	@Resource
	private TblMembershipFormService tblMembershipFormService;
	
	@RequestMapping( value="/items/tblBusiAssoMaster",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TblBusiAssoMasterListItem> findAllAsListItems() {
		List<TblBusiAssoMaster> list = tblBusiAssoMasterService.findAll();
		List<TblBusiAssoMasterListItem> items = new LinkedList<TblBusiAssoMasterListItem>();
		for ( TblBusiAssoMaster tblBusiAssoMaster : list ) {
			items.add(new TblBusiAssoMasterListItem( tblBusiAssoMaster ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tblBusiAssoMaster",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TblBusiAssoMaster> findAll() {
		return tblBusiAssoMasterService.findAll();
	}

	@RequestMapping( value="/tblBusiAssoMaster/{buAsId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblBusiAssoMaster findOne(@PathVariable("buAsId") String buAsId) {
		return tblBusiAssoMasterService.findById(buAsId);
	}
	
	@RequestMapping( value="/tblBusiAssoMaster",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblBusiAssoMaster create(@RequestBody TblBusiAssoMaster tblBusiAssoMaster) {
		return tblBusiAssoMasterService.create(tblBusiAssoMaster);
	}

	@RequestMapping( value="/tblBusiAssoMaster/{buAsId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblBusiAssoMaster update(@PathVariable("buAsId") String buAsId, @RequestBody TblBusiAssoMaster tblBusiAssoMaster) {
		return tblBusiAssoMasterService.update(tblBusiAssoMaster);
	}

	@RequestMapping( value="/tblBusiAssoMaster/{buAsId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("buAsId") String buAsId) {
		tblBusiAssoMasterService.delete(buAsId);
	}

	
	@RequestMapping( value="/printBusinessAssoForm",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public String printBusinessAssoForm(@RequestParam Map<String, String>  reqPar, HttpServletRequest request,HttpServletResponse response) {
		
		try {
			            
						
						String buasId = reqPar.get("buasId");
						String receiptPk = reqPar.get("receiptPk");
						
						String PDFReceiptReport = tblBusiAssoMasterService.printPDFBusinessAssoForm(buasId,receiptPk, request, response);
					    System.out.println("..PDFReceiptReport : "+PDFReceiptReport);
					    ObjectMapper objectMapper = new ObjectMapper();
					    HashMap hashMap = new HashMap();
					    hashMap.put("result", PDFReceiptReport);
					    String writeValueAsString = objectMapper.writeValueAsString(hashMap);
					 
				return writeValueAsString;
			
			} catch (Exception e) {
				
				e.printStackTrace();
			}
			
			return null;
	}
	
	
	@RequestMapping( value="/printBusinessAssoReceipt",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	
	public String printBusinessAssoReceipt(@RequestParam("buasId") String  buasId, HttpServletRequest request,HttpServletResponse response) {
		
		try {
			System.out.println("..buasId : "+buasId);
				if (buasId != null) {
					//Serializable receiptPk = receiptDao.saveSerializable(receipt);
					String PDFReceiptReport = tblBusiAssoMasterService.printPDFBusinessAssoReceipt(buasId, request, response);
				    System.out.println("..PDFReceiptReport : "+PDFReceiptReport);
				    ObjectMapper objectMapper = new ObjectMapper();
				    HashMap hashMap = new HashMap();
				    hashMap.put("result", PDFReceiptReport);
				    String writeValueAsString = objectMapper.writeValueAsString(hashMap);
				 
			return writeValueAsString;
				}
			} catch (Exception e) {
				
				e.printStackTrace();
			}
			
			return null;
	}

	@RequestMapping( value="/printAgreement",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public String printAgreement(@RequestParam Map<String, String>  reqPar, HttpServletRequest request,HttpServletResponse response) {
		
		String buasId = reqPar.get("buasId");
		String receiptPk = reqPar.get("receiptPk");
		try {
			System.out.println("..buasId : "+buasId);
				if (buasId != null) {
					TblReceiptMaster tblReceiptMaster = tblReceiptMasterService.findById(receiptPk);
					String memberId = tblReceiptMaster.getMemberId();
					TblMembershipForm tblMembershipForm = tblMembershipFormService.findById(memberId);
					Date DOB = tblMembershipForm.getMemberDateOfBirth();
					
					//Serializable receiptPk = receiptDao.saveSerializable(receipt);
					//String sql="SELECT m.member_date_of_birth FROM tbl_membership_form m WHERE m.member_id IN (SELECT b.member_id FROM tbl_membership_form m,tbl_busi_asso_master b WHERE m.member_id=b.member_id AND b.bu_as_id='"+buasId+"')";
					//List createSQLQuery = tblBusiAssoMasterService.CreateSQLQuery(sql);
					
					
					
					
					Integer age=CommonUtil.getAgeOfPerson(DOB);
					
					String PDFReceiptReport = tblBusiAssoMasterService.printPDFAgreement(age,buasId,request, response);
				    System.out.println("..PDFReceiptReport : "+PDFReceiptReport);
				    ObjectMapper objectMapper = new ObjectMapper();
				    HashMap hashMap = new HashMap();
				    hashMap.put("result", PDFReceiptReport);
				    String writeValueAsString = objectMapper.writeValueAsString(hashMap);
				 
			return writeValueAsString;
				}
			} catch (Exception e) {
				
				e.printStackTrace();
			}
			
			return null;
	}

	
	@RequestMapping( value="/printLetter",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public String printLetter(@RequestParam Map<String, String>  reqPar, HttpServletRequest request,HttpServletResponse response) {
		
		String buasId = reqPar.get("buasId");
		String receiptPk = reqPar.get("receiptPk");
		try {
			
					TblReceiptMaster tblReceiptMaster = tblReceiptMasterService.findById(receiptPk);
					String memberId = tblReceiptMaster.getMemberId();
					Date receiptDate = tblReceiptMaster.getReceiptCurrentdate();
					TblMembershipForm tblMembershipForm = tblMembershipFormService.findById(memberId);
					Date DOB = tblMembershipForm.getMemberDateOfBirth();
					
					
			
			/*for (int i = 0; i < createSQLQuery.size(); i++) {
				Object[] row = (Object[]) createSQLQuery.get(i);
				DOB = (Date) row[0];
				receiptDate = (Date) row[1];
				
			}*/
			/*Calendar instance = Calendar.getInstance();
			instance.setTime(receiptDate);
			int day = instance.get(Calendar.DAY_OF_MONTH);
			String paramforday="";
			if(day>15)
			{
				paramforday="25";
			}
			else
			{
				paramforday="15";
			}*/
			System.out.println("Receipt date report="+receiptDate);
			System.out.println("DOB " +DOB);
			Integer age=CommonUtil.getAgeOfPerson(DOB);
			
					String PDFReceiptReport = tblBusiAssoMasterService.printPDFLetter(age,buasId,request, response);
				    System.out.println("..PDFReceiptReport : "+PDFReceiptReport);
				    ObjectMapper objectMapper = new ObjectMapper();
				    HashMap hashMap = new HashMap();
				    hashMap.put("result", PDFReceiptReport);
				    String writeValueAsString = objectMapper.writeValueAsString(hashMap);
				 
			return writeValueAsString;
				
			} catch (Exception e) {
				
				e.printStackTrace();
			}
			
			return null;
	}
	
	
	@RequestMapping( value="/printNewAgreement",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public String printNewAgreement(@RequestParam Map<String, String>  reqPar, HttpServletRequest request,HttpServletResponse response) {
		
		String buasId = reqPar.get("buasId");
		String receiptPk = reqPar.get("receiptPk");
		try {
			
					TblReceiptMaster tblReceiptMaster = tblReceiptMasterService.findById(receiptPk);
					String memberId = tblReceiptMaster.getMemberId();
					
					TblMembershipForm tblMembershipForm = tblMembershipFormService.findById(memberId);
					Date DOB = tblMembershipForm.getMemberDateOfBirth();
					
					Integer age=CommonUtil.getAgeOfPerson(DOB);
					
					String PDFReceiptReport = tblBusiAssoMasterService.printNewAgreementBusinessAssociate(age,buasId,request, response);
				    System.out.println("..PDFReceiptReport : "+PDFReceiptReport);
				    
				    ObjectMapper objectMapper = new ObjectMapper();
				    HashMap hashMap = new HashMap();
				    hashMap.put("result", PDFReceiptReport);
				    String writeValueAsString = objectMapper.writeValueAsString(hashMap);
				 
			   return writeValueAsString;
				
			} catch(Exception e) {
				
				e.printStackTrace();
			}
			
			return null;
	}
}
