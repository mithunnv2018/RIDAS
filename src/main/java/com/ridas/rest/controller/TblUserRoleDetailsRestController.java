/*
 * Created on 29 Feb 2016 ( Time 17:45:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.ridas.bean.TblUserRoleDetails;
import com.ridas.business.service.TblUserRoleDetailsService;
import com.ridas.web.listitem.TblUserRoleDetailsListItem;

/**
 * Spring MVC controller for 'TblUserRoleDetails' management.
 */
@Controller
public class TblUserRoleDetailsRestController {

	@Resource
	private TblUserRoleDetailsService tblUserRoleDetailsService;
	
	@RequestMapping( value="/items/tblUserRoleDetails",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TblUserRoleDetailsListItem> findAllAsListItems() {
		List<TblUserRoleDetails> list = tblUserRoleDetailsService.findAll();
		List<TblUserRoleDetailsListItem> items = new LinkedList<TblUserRoleDetailsListItem>();
		for ( TblUserRoleDetails tblUserRoleDetails : list ) {
			items.add(new TblUserRoleDetailsListItem( tblUserRoleDetails ) );
		}
		return items;
	}
	
	@RequestMapping( value="/tblUserRoleDetails",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TblUserRoleDetails> findAll() {
		return tblUserRoleDetailsService.findAll();
	}

	@RequestMapping( value="/tblUserRoleDetails/{userRoleDetailId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblUserRoleDetails findOne(@PathVariable("userRoleDetailId") String userRoleDetailId) {
		return tblUserRoleDetailsService.findById(userRoleDetailId);
	}
	
	@RequestMapping( value="/tblUserRoleDetails",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblUserRoleDetails create(@RequestBody TblUserRoleDetails tblUserRoleDetails) {
		return tblUserRoleDetailsService.create(tblUserRoleDetails);
	}

	@RequestMapping( value="/tblUserRoleDetails/{userRoleDetailId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public TblUserRoleDetails update(@PathVariable("userRoleDetailId") String userRoleDetailId, @RequestBody TblUserRoleDetails tblUserRoleDetails) {
		return tblUserRoleDetailsService.update(tblUserRoleDetails);
	}

	@RequestMapping( value="/tblUserRoleDetails/{userRoleDetailId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("userRoleDetailId") String userRoleDetailId) {
		tblUserRoleDetailsService.delete(userRoleDetailId);
	}
	
}
