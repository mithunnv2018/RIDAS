/*
 * Created on 29 Feb 2016 ( Time 17:46:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.ridas.bean.TblPlotRecMaster;
import com.ridas.bean.jpa.TblPlotRecMasterEntity;
import com.ridas.bean.jpa.TblReceiptMasterEntity;
import com.ridas.bean.jpa.TblPlotMasterEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TblPlotRecMasterServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public TblPlotRecMasterServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'TblPlotRecMasterEntity' to 'TblPlotRecMaster'
	 * @param tblPlotRecMasterEntity
	 */
	public TblPlotRecMaster mapTblPlotRecMasterEntityToTblPlotRecMaster(TblPlotRecMasterEntity tblPlotRecMasterEntity) {
		if(tblPlotRecMasterEntity == null) {
			return null;
		}

		//--- Generic mapping 
		TblPlotRecMaster tblPlotRecMaster = map(tblPlotRecMasterEntity, TblPlotRecMaster.class);

		//--- Link mapping ( link to TblReceiptMaster )
		if(tblPlotRecMasterEntity.getTblReceiptMaster() != null) {
			tblPlotRecMaster.setReceiptPk(tblPlotRecMasterEntity.getTblReceiptMaster().getReceiptPk());
		}
		//--- Link mapping ( link to TblPlotMaster )
		if(tblPlotRecMasterEntity.getTblPlotMaster() != null) {
			tblPlotRecMaster.setPlotPk(tblPlotRecMasterEntity.getTblPlotMaster().getPlotPk());
		}
		return tblPlotRecMaster;
	}
	
	/**
	 * Mapping from 'TblPlotRecMaster' to 'TblPlotRecMasterEntity'
	 * @param tblPlotRecMaster
	 * @param tblPlotRecMasterEntity
	 */
	public void mapTblPlotRecMasterToTblPlotRecMasterEntity(TblPlotRecMaster tblPlotRecMaster, TblPlotRecMasterEntity tblPlotRecMasterEntity) {
		if(tblPlotRecMaster == null) {
			return;
		}

		//--- Generic mapping 
		map(tblPlotRecMaster, tblPlotRecMasterEntity);

		//--- Link mapping ( link : tblPlotRecMaster )
		if( hasLinkToTblReceiptMaster(tblPlotRecMaster) ) {
			TblReceiptMasterEntity tblReceiptMaster1 = new TblReceiptMasterEntity();
			tblReceiptMaster1.setReceiptPk( tblPlotRecMaster.getReceiptPk() );
			tblPlotRecMasterEntity.setTblReceiptMaster( tblReceiptMaster1 );
		} else {
			tblPlotRecMasterEntity.setTblReceiptMaster( null );
		}

		//--- Link mapping ( link : tblPlotRecMaster )
		if( hasLinkToTblPlotMaster(tblPlotRecMaster) ) {
			TblPlotMasterEntity tblPlotMaster2 = new TblPlotMasterEntity();
			tblPlotMaster2.setPlotPk( tblPlotRecMaster.getPlotPk() );
			tblPlotRecMasterEntity.setTblPlotMaster( tblPlotMaster2 );
		} else {
			tblPlotRecMasterEntity.setTblPlotMaster( null );
		}

	}
	
	/**
	 * Verify that TblReceiptMaster id is valid.
	 * @param TblReceiptMaster TblReceiptMaster
	 * @return boolean
	 */
	private boolean hasLinkToTblReceiptMaster(TblPlotRecMaster tblPlotRecMaster) {
		if(tblPlotRecMaster.getReceiptPk() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that TblPlotMaster id is valid.
	 * @param TblPlotMaster TblPlotMaster
	 * @return boolean
	 */
	private boolean hasLinkToTblPlotMaster(TblPlotRecMaster tblPlotRecMaster) {
		if(tblPlotRecMaster.getPlotPk() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}