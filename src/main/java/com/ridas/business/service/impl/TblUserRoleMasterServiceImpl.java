/*
 * Created on 29 Feb 2016 ( Time 17:46:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.ridas.bean.TblUserRoleMaster;
import com.ridas.bean.jpa.TblUserRoleMasterEntity;
import java.util.Date;
import java.util.List;
import com.ridas.business.service.TblUserRoleMasterService;
import com.ridas.business.service.mapping.TblUserRoleMasterServiceMapper;
import com.ridas.persistence.PersistenceServiceProvider;
import com.ridas.persistence.services.TblUserRoleMasterPersistence;
import org.springframework.stereotype.Component;

//done as on 19 feb 2016 import below
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
//done as on 22 feb 2016 import of supercsv
import org.supercsv.cellprocessor.ParseBigDecimal;
import org.supercsv.cellprocessor.ParseBool;
import org.supercsv.cellprocessor.ParseChar;
import org.supercsv.cellprocessor.ParseDate;
import org.supercsv.cellprocessor.ParseDouble;
import org.supercsv.cellprocessor.ParseInt;
import org.supercsv.cellprocessor.ParseLong;
import org.supercsv.cellprocessor.constraint.NotNull;
import org.supercsv.cellprocessor.ift.CellProcessor;
import org.supercsv.io.CsvBeanReader;
import org.supercsv.io.ICsvBeanReader;
import org.supercsv.prefs.CsvPreference;



import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;
import org.supercsv.cellprocessor.ParseDate;
import org.supercsv.cellprocessor.ParseDouble;
import org.supercsv.cellprocessor.ParseLong;
import org.supercsv.cellprocessor.constraint.NotNull;
import org.supercsv.cellprocessor.ift.CellProcessor;
import org.supercsv.io.CsvBeanReader;
import org.supercsv.io.ICsvBeanReader;
import org.supercsv.prefs.CsvPreference;
import org.springframework.web.multipart.MultipartFile;
				
/**
 * Implementation of TblUserRoleMasterService
 */
@Component
public class TblUserRoleMasterServiceImpl implements TblUserRoleMasterService {

	private TblUserRoleMasterPersistence tblUserRoleMasterPersistence;

	@Resource
	private TblUserRoleMasterServiceMapper tblUserRoleMasterServiceMapper;
	
	public TblUserRoleMasterServiceImpl() {
		tblUserRoleMasterPersistence = PersistenceServiceProvider.getService(TblUserRoleMasterPersistence.class);
	}
		
	@Override
	public TblUserRoleMaster findById(String userRoleId) {
		TblUserRoleMasterEntity entity = tblUserRoleMasterPersistence.load(userRoleId);
		return tblUserRoleMasterServiceMapper.mapTblUserRoleMasterEntityToTblUserRoleMaster(entity);
	}

	@Override
	public List<TblUserRoleMaster> findAll() {
		List<TblUserRoleMasterEntity> entities = tblUserRoleMasterPersistence.loadAll();
		List<TblUserRoleMaster> beans = new ArrayList<TblUserRoleMaster>();
		for(TblUserRoleMasterEntity entity : entities) {
			beans.add(tblUserRoleMasterServiceMapper.mapTblUserRoleMasterEntityToTblUserRoleMaster(entity));
		}
		return beans;
	}

	@Override
	public TblUserRoleMaster save(TblUserRoleMaster tblUserRoleMaster) {
		return update(tblUserRoleMaster) ;
	}

	@Override
	public TblUserRoleMaster create(TblUserRoleMaster tblUserRoleMaster) {
		if(tblUserRoleMasterPersistence.load(tblUserRoleMaster.getUserRoleId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		TblUserRoleMasterEntity tblUserRoleMasterEntity = new TblUserRoleMasterEntity();

	 	
		
		tblUserRoleMasterServiceMapper.mapTblUserRoleMasterToTblUserRoleMasterEntity(tblUserRoleMaster, tblUserRoleMasterEntity);
	 	
		TblUserRoleMasterEntity tblUserRoleMasterEntitySaved = tblUserRoleMasterPersistence.save(tblUserRoleMasterEntity);
		return tblUserRoleMasterServiceMapper.mapTblUserRoleMasterEntityToTblUserRoleMaster(tblUserRoleMasterEntitySaved);
	}

	@Override
	public TblUserRoleMaster update(TblUserRoleMaster tblUserRoleMaster) {
		TblUserRoleMasterEntity tblUserRoleMasterEntity = tblUserRoleMasterPersistence.load(tblUserRoleMaster.getUserRoleId());
		tblUserRoleMasterServiceMapper.mapTblUserRoleMasterToTblUserRoleMasterEntity(tblUserRoleMaster, tblUserRoleMasterEntity);
		TblUserRoleMasterEntity tblUserRoleMasterEntitySaved = tblUserRoleMasterPersistence.save(tblUserRoleMasterEntity);
		return tblUserRoleMasterServiceMapper.mapTblUserRoleMasterEntityToTblUserRoleMaster(tblUserRoleMasterEntitySaved);
	}

	@Override
	public void delete(String userRoleId) {
		tblUserRoleMasterPersistence.delete(userRoleId);
	}

	public TblUserRoleMasterPersistence getTblUserRoleMasterPersistence() {
		return tblUserRoleMasterPersistence;
	}

	public void setTblUserRoleMasterPersistence(TblUserRoleMasterPersistence tblUserRoleMasterPersistence) {
		this.tblUserRoleMasterPersistence = tblUserRoleMasterPersistence;
	}

	public TblUserRoleMasterServiceMapper getTblUserRoleMasterServiceMapper() {
		return tblUserRoleMasterServiceMapper;
	}

	public void setTblUserRoleMasterServiceMapper(TblUserRoleMasterServiceMapper tblUserRoleMasterServiceMapper) {
		this.tblUserRoleMasterServiceMapper = tblUserRoleMasterServiceMapper;
	}

/**
	* 	done as on 13 feb 2016 added for TblUserMaster for retrieving user details for login
    */

	@Override
	public Boolean doImportExcelSpreadSheet(MultipartFile file) throws IOException {
		
		ICsvBeanReader beanReader = null;
		try
		{
//done as on 22-feb-2016  code to remove unwanted fields from list

			beanReader = new CsvBeanReader(new InputStreamReader(file.getInputStream()),
					CsvPreference.STANDARD_PREFERENCE);
			final String[] header = beanReader.getHeader(true);
			final CellProcessor[] processors = new CellProcessor[] { 
					new NotNull()
					,
					new NotNull()

			};

			TblUserRoleMaster tblUserRoleMaster=new TblUserRoleMaster();
			while((tblUserRoleMaster=beanReader.read(TblUserRoleMaster.class, header,processors))!=null){

		
		 
			
			// done as on 19 feb 2016  save primary key default to temp
				String DUMMY="temp";

				tblUserRoleMaster.setUserRoleId(DUMMY);

			 	create(tblUserRoleMaster);
			}
		}
		finally
		{
			if( beanReader != null ) {
                beanReader.close();
        	}
		}
		return true;
	}
}
