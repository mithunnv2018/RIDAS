/*
 * Created on 29 Feb 2016 ( Time 17:46:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.ridas.bean.TblUserRoleDetails;
import com.ridas.bean.jpa.TblUserRoleDetailsEntity;
import java.util.Date;
import com.ridas.business.service.TblUserRoleDetailsService;
import com.ridas.business.service.mapping.TblUserRoleDetailsServiceMapper;
import com.ridas.persistence.PersistenceServiceProvider;
import com.ridas.persistence.services.TblUserRoleDetailsPersistence;
import org.springframework.stereotype.Component;

//done as on 19 feb 2016 import below
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
//done as on 22 feb 2016 import of supercsv
import org.supercsv.cellprocessor.ParseBigDecimal;
import org.supercsv.cellprocessor.ParseBool;
import org.supercsv.cellprocessor.ParseChar;
import org.supercsv.cellprocessor.ParseDate;
import org.supercsv.cellprocessor.ParseDouble;
import org.supercsv.cellprocessor.ParseInt;
import org.supercsv.cellprocessor.ParseLong;
import org.supercsv.cellprocessor.constraint.NotNull;
import org.supercsv.cellprocessor.ift.CellProcessor;
import org.supercsv.io.CsvBeanReader;
import org.supercsv.io.ICsvBeanReader;
import org.supercsv.prefs.CsvPreference;



import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;
import org.supercsv.cellprocessor.ParseDate;
import org.supercsv.cellprocessor.ParseDouble;
import org.supercsv.cellprocessor.ParseLong;
import org.supercsv.cellprocessor.constraint.NotNull;
import org.supercsv.cellprocessor.ift.CellProcessor;
import org.supercsv.io.CsvBeanReader;
import org.supercsv.io.ICsvBeanReader;
import org.supercsv.prefs.CsvPreference;
import org.springframework.web.multipart.MultipartFile;
				
/**
 * Implementation of TblUserRoleDetailsService
 */
@Component
public class TblUserRoleDetailsServiceImpl implements TblUserRoleDetailsService {

	private TblUserRoleDetailsPersistence tblUserRoleDetailsPersistence;

	@Resource
	private TblUserRoleDetailsServiceMapper tblUserRoleDetailsServiceMapper;
	
	public TblUserRoleDetailsServiceImpl() {
		tblUserRoleDetailsPersistence = PersistenceServiceProvider.getService(TblUserRoleDetailsPersistence.class);
	}
		
	@Override
	public TblUserRoleDetails findById(String userRoleDetailId) {
		TblUserRoleDetailsEntity entity = tblUserRoleDetailsPersistence.load(userRoleDetailId);
		return tblUserRoleDetailsServiceMapper.mapTblUserRoleDetailsEntityToTblUserRoleDetails(entity);
	}

	@Override
	public List<TblUserRoleDetails> findAll() {
		List<TblUserRoleDetailsEntity> entities = tblUserRoleDetailsPersistence.loadAll();
		List<TblUserRoleDetails> beans = new ArrayList<TblUserRoleDetails>();
		for(TblUserRoleDetailsEntity entity : entities) {
			beans.add(tblUserRoleDetailsServiceMapper.mapTblUserRoleDetailsEntityToTblUserRoleDetails(entity));
		}
		return beans;
	}

	@Override
	public TblUserRoleDetails save(TblUserRoleDetails tblUserRoleDetails) {
		return update(tblUserRoleDetails) ;
	}

	@Override
	public TblUserRoleDetails create(TblUserRoleDetails tblUserRoleDetails) {
		if(tblUserRoleDetailsPersistence.load(tblUserRoleDetails.getUserRoleDetailId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		TblUserRoleDetailsEntity tblUserRoleDetailsEntity = new TblUserRoleDetailsEntity();

	 	
		
		tblUserRoleDetailsServiceMapper.mapTblUserRoleDetailsToTblUserRoleDetailsEntity(tblUserRoleDetails, tblUserRoleDetailsEntity);
	 	
		TblUserRoleDetailsEntity tblUserRoleDetailsEntitySaved = tblUserRoleDetailsPersistence.save(tblUserRoleDetailsEntity);
		return tblUserRoleDetailsServiceMapper.mapTblUserRoleDetailsEntityToTblUserRoleDetails(tblUserRoleDetailsEntitySaved);
	}

	@Override
	public TblUserRoleDetails update(TblUserRoleDetails tblUserRoleDetails) {
		TblUserRoleDetailsEntity tblUserRoleDetailsEntity = tblUserRoleDetailsPersistence.load(tblUserRoleDetails.getUserRoleDetailId());
		tblUserRoleDetailsServiceMapper.mapTblUserRoleDetailsToTblUserRoleDetailsEntity(tblUserRoleDetails, tblUserRoleDetailsEntity);
		TblUserRoleDetailsEntity tblUserRoleDetailsEntitySaved = tblUserRoleDetailsPersistence.save(tblUserRoleDetailsEntity);
		return tblUserRoleDetailsServiceMapper.mapTblUserRoleDetailsEntityToTblUserRoleDetails(tblUserRoleDetailsEntitySaved);
	}

	@Override
	public void delete(String userRoleDetailId) {
		tblUserRoleDetailsPersistence.delete(userRoleDetailId);
	}

	public TblUserRoleDetailsPersistence getTblUserRoleDetailsPersistence() {
		return tblUserRoleDetailsPersistence;
	}

	public void setTblUserRoleDetailsPersistence(TblUserRoleDetailsPersistence tblUserRoleDetailsPersistence) {
		this.tblUserRoleDetailsPersistence = tblUserRoleDetailsPersistence;
	}

	public TblUserRoleDetailsServiceMapper getTblUserRoleDetailsServiceMapper() {
		return tblUserRoleDetailsServiceMapper;
	}

	public void setTblUserRoleDetailsServiceMapper(TblUserRoleDetailsServiceMapper tblUserRoleDetailsServiceMapper) {
		this.tblUserRoleDetailsServiceMapper = tblUserRoleDetailsServiceMapper;
	}

/**
	* 	done as on 13 feb 2016 added for TblUserMaster for retrieving user details for login
    */

	@Override
	public Boolean doImportExcelSpreadSheet(MultipartFile file) throws IOException {
		
		ICsvBeanReader beanReader = null;
		try
		{
//done as on 22-feb-2016  code to remove unwanted fields from list

			beanReader = new CsvBeanReader(new InputStreamReader(file.getInputStream()),
					CsvPreference.STANDARD_PREFERENCE);
			final String[] header = beanReader.getHeader(true);
			final CellProcessor[] processors = new CellProcessor[] { 
					new NotNull()
					,
					new NotNull()
					,
					new NotNull()

			};

			TblUserRoleDetails tblUserRoleDetails=new TblUserRoleDetails();
			while((tblUserRoleDetails=beanReader.read(TblUserRoleDetails.class, header,processors))!=null){

		
		 
			
			// done as on 19 feb 2016  save primary key default to temp
				String DUMMY="temp";

				tblUserRoleDetails.setUserRoleDetailId(DUMMY);

			 	create(tblUserRoleDetails);
			}
		}
		finally
		{
			if( beanReader != null ) {
                beanReader.close();
        	}
		}
		return true;
	}
}
