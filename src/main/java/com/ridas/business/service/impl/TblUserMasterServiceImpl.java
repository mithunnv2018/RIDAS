/*
 * Created on 29 Feb 2016 ( Time 17:46:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.ridas.bean.TblUserMaster;
import com.ridas.bean.jpa.TblUserMasterEntity;
import java.util.Date;
import java.util.List;
import com.ridas.business.service.TblUserMasterService;
import com.ridas.business.service.mapping.TblUserMasterServiceMapper;
import com.ridas.persistence.PersistenceServiceProvider;
import com.ridas.persistence.services.TblUserMasterPersistence;
import org.springframework.stereotype.Component;

//done as on 19 feb 2016 import below
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
//done as on 22 feb 2016 import of supercsv
import org.supercsv.cellprocessor.ParseBigDecimal;
import org.supercsv.cellprocessor.ParseBool;
import org.supercsv.cellprocessor.ParseChar;
import org.supercsv.cellprocessor.ParseDate;
import org.supercsv.cellprocessor.ParseDouble;
import org.supercsv.cellprocessor.ParseInt;
import org.supercsv.cellprocessor.ParseLong;
import org.supercsv.cellprocessor.constraint.NotNull;
import org.supercsv.cellprocessor.ift.CellProcessor;
import org.supercsv.io.CsvBeanReader;
import org.supercsv.io.ICsvBeanReader;
import org.supercsv.prefs.CsvPreference;



import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;
import org.supercsv.cellprocessor.ParseDate;
import org.supercsv.cellprocessor.ParseDouble;
import org.supercsv.cellprocessor.ParseLong;
import org.supercsv.cellprocessor.constraint.NotNull;
import org.supercsv.cellprocessor.ift.CellProcessor;
import org.supercsv.io.CsvBeanReader;
import org.supercsv.io.ICsvBeanReader;
import org.supercsv.prefs.CsvPreference;
import org.springframework.web.multipart.MultipartFile;
				
/**
 * Implementation of TblUserMasterService
 */
@Component
public class TblUserMasterServiceImpl implements TblUserMasterService {

	private TblUserMasterPersistence tblUserMasterPersistence;

	@Resource
	private TblUserMasterServiceMapper tblUserMasterServiceMapper;
	
	public TblUserMasterServiceImpl() {
		tblUserMasterPersistence = PersistenceServiceProvider.getService(TblUserMasterPersistence.class);
	}
		
	@Override
	public TblUserMaster findById(String userIdPk) {
		TblUserMasterEntity entity = tblUserMasterPersistence.load(userIdPk);
		return tblUserMasterServiceMapper.mapTblUserMasterEntityToTblUserMaster(entity);
	}

	@Override
	public List<TblUserMaster> findAll() {
		List<TblUserMasterEntity> entities = tblUserMasterPersistence.loadAll();
		List<TblUserMaster> beans = new ArrayList<TblUserMaster>();
		for(TblUserMasterEntity entity : entities) {
			beans.add(tblUserMasterServiceMapper.mapTblUserMasterEntityToTblUserMaster(entity));
		}
		return beans;
	}

	@Override
	public TblUserMaster save(TblUserMaster tblUserMaster) {
		return update(tblUserMaster) ;
	}

	@Override
	public TblUserMaster create(TblUserMaster tblUserMaster) {
		if(tblUserMasterPersistence.load(tblUserMaster.getUserIdPk()) != null) {
			throw new IllegalStateException("already.exists");
		}
		TblUserMasterEntity tblUserMasterEntity = new TblUserMasterEntity();

	 	
		
		tblUserMasterServiceMapper.mapTblUserMasterToTblUserMasterEntity(tblUserMaster, tblUserMasterEntity);
	 	
		TblUserMasterEntity tblUserMasterEntitySaved = tblUserMasterPersistence.save(tblUserMasterEntity);
		return tblUserMasterServiceMapper.mapTblUserMasterEntityToTblUserMaster(tblUserMasterEntitySaved);
	}

	@Override
	public TblUserMaster update(TblUserMaster tblUserMaster) {
		TblUserMasterEntity tblUserMasterEntity = tblUserMasterPersistence.load(tblUserMaster.getUserIdPk());
		tblUserMasterServiceMapper.mapTblUserMasterToTblUserMasterEntity(tblUserMaster, tblUserMasterEntity);
		TblUserMasterEntity tblUserMasterEntitySaved = tblUserMasterPersistence.save(tblUserMasterEntity);
		return tblUserMasterServiceMapper.mapTblUserMasterEntityToTblUserMaster(tblUserMasterEntitySaved);
	}

	@Override
	public void delete(String userIdPk) {
		tblUserMasterPersistence.delete(userIdPk);
	}

	public TblUserMasterPersistence getTblUserMasterPersistence() {
		return tblUserMasterPersistence;
	}

	public void setTblUserMasterPersistence(TblUserMasterPersistence tblUserMasterPersistence) {
		this.tblUserMasterPersistence = tblUserMasterPersistence;
	}

	public TblUserMasterServiceMapper getTblUserMasterServiceMapper() {
		return tblUserMasterServiceMapper;
	}

	public void setTblUserMasterServiceMapper(TblUserMasterServiceMapper tblUserMasterServiceMapper) {
		this.tblUserMasterServiceMapper = tblUserMasterServiceMapper;
	}

/**
	* 	done as on 13 feb 2016 added for TblUserMaster for retrieving user details for login
    */
	  
 	@Override
 	public List<TblUserMasterEntity> getUser(  String username) {
  		return tblUserMasterPersistence.getUser(username);
 	}

	@Override
	public Boolean doImportExcelSpreadSheet(MultipartFile file) throws IOException {
		
		ICsvBeanReader beanReader = null;
		try
		{
//done as on 22-feb-2016  code to remove unwanted fields from list

			beanReader = new CsvBeanReader(new InputStreamReader(file.getInputStream()),
					CsvPreference.STANDARD_PREFERENCE);
			final String[] header = beanReader.getHeader(true);
			final CellProcessor[] processors = new CellProcessor[] { 
					new NotNull()
					,
					new NotNull()
					,
					new NotNull()

			};

			TblUserMaster tblUserMaster=new TblUserMaster();
			while((tblUserMaster=beanReader.read(TblUserMaster.class, header,processors))!=null){

		
		 
			
			// done as on 19 feb 2016  save primary key default to temp
				String DUMMY="temp";

				tblUserMaster.setUserIdPk(DUMMY);

			 	create(tblUserMaster);
			}
		}
		finally
		{
			if( beanReader != null ) {
                beanReader.close();
        	}
		}
		return true;
	}
}
