/*
 * Created on 29 Feb 2016 ( Time 17:46:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.ridas.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "tbl_user_role_details"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="tbl_user_role_details", catalog="ridasindiaproperties" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TblUserRoleDetailsEntity.countAll", query="SELECT COUNT(x) FROM TblUserRoleDetailsEntity x" )
} )
public class TblUserRoleDetailsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="user_role_detail_id", nullable=false, length=100)
    private String     userRoleDetailId ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user_role_detail_name", length=100)
    private String     userRoleDetailName ;

    @Column(name="status", length=100)
    private String     status       ;

    @Column(name="user_id", length=100)
    private String     userId       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified_date")
    private Date       modifiedDate ;

    @Column(name="prefixcolumn", length=500)
    private String     prefixcolumn ;

    @Column(name="countpk")
    private Long       countpk      ;

	// "userRoleId" (column "user_role_id") is not defined by itself because used as FK in a link 
	// "userRoleUserId" (column "user_role_user_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
    @ManyToOne
    @JoinColumn(name="user_role_id", referencedColumnName="user_role_id")
    private TblUserRoleMasterEntity tblUserRoleMaster;
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
    @ManyToOne
    @JoinColumn(name="user_role_user_id", referencedColumnName="user_id_pk")
    private TblUserMasterEntity tblUserMaster;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TblUserRoleDetailsEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUserRoleDetailId( String userRoleDetailId ) {
        this.userRoleDetailId = userRoleDetailId ;
    }
    public String getUserRoleDetailId() {
        return this.userRoleDetailId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user_role_detail_name ( VARCHAR ) 
    public void setUserRoleDetailName( String userRoleDetailName ) {
        this.userRoleDetailName = userRoleDetailName;
    }
    public String getUserRoleDetailName() {
        return this.userRoleDetailName;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : user_id ( VARCHAR ) 
    public void setUserId( String userId ) {
        this.userId = userId;
    }
    public String getUserId() {
        return this.userId;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : modified_date ( DATETIME ) 
    public void setModifiedDate( Date modifiedDate ) {
        this.modifiedDate = modifiedDate;
    }
    public Date getModifiedDate() {
        return this.modifiedDate;
    }

    //--- DATABASE MAPPING : prefixcolumn ( VARCHAR ) 
    public void setPrefixcolumn( String prefixcolumn ) {
        this.prefixcolumn = prefixcolumn;
    }
    public String getPrefixcolumn() {
        return this.prefixcolumn;
    }

    //--- DATABASE MAPPING : countpk ( BIGINT ) 
    public void setCountpk( Long countpk ) {
        this.countpk = countpk;
    }
    public Long getCountpk() {
        return this.countpk;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setTblUserRoleMaster( TblUserRoleMasterEntity tblUserRoleMaster ) {
        this.tblUserRoleMaster = tblUserRoleMaster;
    }
    public TblUserRoleMasterEntity getTblUserRoleMaster() {
        return this.tblUserRoleMaster;
    }

    public void setTblUserMaster( TblUserMasterEntity tblUserMaster ) {
        this.tblUserMaster = tblUserMaster;
    }
    public TblUserMasterEntity getTblUserMaster() {
        return this.tblUserMaster;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(userRoleDetailId);
        sb.append("]:"); 
        sb.append(userRoleDetailName);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(userId);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(modifiedDate);
        sb.append("|");
        sb.append(prefixcolumn);
        sb.append("|");
        sb.append(countpk);
        return sb.toString(); 
    } 

}
