/*
 * Created on 29 Feb 2016 ( Time 17:46:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.ridas.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "tbl_membership_form"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="tbl_membership_form", catalog="ridasindiaproperties" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TblMembershipFormEntity.countAll", query="SELECT COUNT(x) FROM TblMembershipFormEntity x" )
} )
public class TblMembershipFormEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="member_id", nullable=false, length=50)
    private String     memberId     ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="member_prefix", length=50)
    private String     memberPrefix ;

    @Column(name="member_name", length=255)
    private String     memberName   ;

    @Column(name="member_so_wo_do", length=50)
    private String     memberSoWoDo ;

    @Temporal(TemporalType.DATE)
    @Column(name="member_date_of_birth")
    private Date       memberDateOfBirth ;

    @Column(name="member_nationality", length=50)
    private String     memberNationality ;

    @Column(name="member_residence")
    private String     memberResidence ;

    @Column(name="member_office_address")
    private String     memberOfficeAddress ;

    @Column(name="member_residental_status", length=50)
    private String     memberResidentalStatus ;

    @Column(name="member_pan", length=50)
    private String     memberPan    ;

    @Column(name="member_occupation", length=50)
    private String     memberOccupation ;

    @Column(name="member_contact_mobile", length=100)
    private String     memberContactMobile ;

    @Column(name="member_contact_residence")
    private String     memberContactResidence ;

    @Column(name="member_contact_office")
    private String     memberContactOffice ;

    @Column(name="member_contact_others", length=50)
    private String     memberContactOthers ;

    @Column(name="member_contact_email", length=50)
    private String     memberContactEmail ;

    @Column(name="member_membership_through", length=50)
    private String     memberMembershipThrough ;

    @Column(name="nominee_name", length=50)
    private String     nomineeName  ;

    @Column(name="nominee_so_wo_do", length=50)
    private String     nomineeSoWoDo ;

    @Temporal(TemporalType.DATE)
    @Column(name="nominee_date_of_birth")
    private Date       nomineeDateOfBirth ;

    @Column(name="nominee_address")
    private String     nomineeAddress ;

    @Column(name="nominee_contact_number", length=100)
    private String     nomineeContactNumber ;

    @Column(name="nominee_gender", length=50)
    private String     nomineeGender ;

    @Column(name="nominee_relation_with_member", length=50)
    private String     nomineeRelationWithMember ;

    @Column(name="bank_acc_no", length=255)
    private String     bankAccNo    ;

    @Column(name="ifsc_code", length=255)
    private String     ifscCode     ;

    @Column(name="type_of_acc", length=50)
    private String     typeOfAcc    ;

    @Column(name="bank_name", length=255)
    private String     bankName     ;

    @Column(name="branch_and_address")
    private String     branchAndAddress ;

    @Column(name="receipt_no", length=50)
    private String     receiptNo    ;

    @Column(name="verified_by", length=50)
    private String     verifiedBy   ;

    @Column(name="countpk")
    private Long       countpk      ;

    @Column(name="prefixcolumn", length=100)
    private String     prefixcolumn ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified_date")
    private Date modifiedDate ;

    @Column(name="user_id", length=100)
    private String     userId       ;

    @Column(name="status", length=100)
    private String     status       ;

    @Temporal(TemporalType.DATE)
    @Column(name="member_current_date")
    private Date       memberCurrentDate ;
	// "memberFk" (column "member_fk") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
    @ManyToOne
    @JoinColumn(name="member_fk", referencedColumnName="member_id")
    private TblMembershipFormEntity tblMembershipForm;
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
    @OneToMany(mappedBy="tblMembershipForm", targetEntity=TblPlotMasterEntity.class)
    private List<TblPlotMasterEntity> listOfTblPlotMaster;
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
    @OneToMany(mappedBy="tblMembershipForm", targetEntity=TblReceiptMasterEntity.class)
    private List<TblReceiptMasterEntity> listOfTblReceiptMaster;
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
    @OneToMany(mappedBy="tblMembershipForm", targetEntity=TblMembershipFormEntity.class)
    private List<TblMembershipFormEntity> listOfTblMembershipForm;
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
    @OneToMany(mappedBy="tblMembershipForm", targetEntity=TblBusiAssoMasterEntity.class)
    private List<TblBusiAssoMasterEntity> listOfTblBusiAssoMaster;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TblMembershipFormEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setMemberId( String memberId ) {
        this.memberId = memberId ;
    }
    public String getMemberId() {
        return this.memberId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : member_prefix ( VARCHAR ) 
    public void setMemberPrefix( String memberPrefix ) {
        this.memberPrefix = memberPrefix;
    }
    public String getMemberPrefix() {
        return this.memberPrefix;
    }

    //--- DATABASE MAPPING : member_name ( VARCHAR ) 
    public void setMemberName( String memberName ) {
        this.memberName = memberName;
    }
    public String getMemberName() {
        return this.memberName;
    }

    //--- DATABASE MAPPING : member_so_wo_do ( VARCHAR ) 
    public void setMemberSoWoDo( String memberSoWoDo ) {
        this.memberSoWoDo = memberSoWoDo;
    }
    public String getMemberSoWoDo() {
        return this.memberSoWoDo;
    }

    //--- DATABASE MAPPING : member_date_of_birth ( DATE ) 
    public void setMemberDateOfBirth( Date memberDateOfBirth ) {
        this.memberDateOfBirth = memberDateOfBirth;
    }
    public Date getMemberDateOfBirth() {
        return this.memberDateOfBirth;
    }

    //--- DATABASE MAPPING : member_nationality ( VARCHAR ) 
    public void setMemberNationality( String memberNationality ) {
        this.memberNationality = memberNationality;
    }
    public String getMemberNationality() {
        return this.memberNationality;
    }

    //--- DATABASE MAPPING : member_residence ( LONGTEXT ) 
    public void setMemberResidence( String memberResidence ) {
        this.memberResidence = memberResidence;
    }
    public String getMemberResidence() {
        return this.memberResidence;
    }

    //--- DATABASE MAPPING : member_office_address ( LONGTEXT ) 
    public void setMemberOfficeAddress( String memberOfficeAddress ) {
        this.memberOfficeAddress = memberOfficeAddress;
    }
    public String getMemberOfficeAddress() {
        return this.memberOfficeAddress;
    }

    //--- DATABASE MAPPING : member_residental_status ( VARCHAR ) 
    public void setMemberResidentalStatus( String memberResidentalStatus ) {
        this.memberResidentalStatus = memberResidentalStatus;
    }
    public String getMemberResidentalStatus() {
        return this.memberResidentalStatus;
    }

    //--- DATABASE MAPPING : member_pan ( VARCHAR ) 
    public void setMemberPan( String memberPan ) {
        this.memberPan = memberPan;
    }
    public String getMemberPan() {
        return this.memberPan;
    }

    //--- DATABASE MAPPING : member_occupation ( VARCHAR ) 
    public void setMemberOccupation( String memberOccupation ) {
        this.memberOccupation = memberOccupation;
    }
    public String getMemberOccupation() {
        return this.memberOccupation;
    }

    //--- DATABASE MAPPING : member_contact_mobile ( VARCHAR ) 
    public void setMemberContactMobile( String memberContactMobile ) {
        this.memberContactMobile = memberContactMobile;
    }
    public String getMemberContactMobile() {
        return this.memberContactMobile;
    }

    //--- DATABASE MAPPING : member_contact_residence ( LONGTEXT ) 
    public void setMemberContactResidence( String memberContactResidence ) {
        this.memberContactResidence = memberContactResidence;
    }
    public String getMemberContactResidence() {
        return this.memberContactResidence;
    }

    //--- DATABASE MAPPING : member_contact_office ( LONGTEXT ) 
    public void setMemberContactOffice( String memberContactOffice ) {
        this.memberContactOffice = memberContactOffice;
    }
    public String getMemberContactOffice() {
        return this.memberContactOffice;
    }

    //--- DATABASE MAPPING : member_contact_others ( VARCHAR ) 
    public void setMemberContactOthers( String memberContactOthers ) {
        this.memberContactOthers = memberContactOthers;
    }
    public String getMemberContactOthers() {
        return this.memberContactOthers;
    }

    //--- DATABASE MAPPING : member_contact_email ( VARCHAR ) 
    public void setMemberContactEmail( String memberContactEmail ) {
        this.memberContactEmail = memberContactEmail;
    }
    public String getMemberContactEmail() {
        return this.memberContactEmail;
    }

    //--- DATABASE MAPPING : member_membership_through ( VARCHAR ) 
    public void setMemberMembershipThrough( String memberMembershipThrough ) {
        this.memberMembershipThrough = memberMembershipThrough;
    }
    public String getMemberMembershipThrough() {
        return this.memberMembershipThrough;
    }

    //--- DATABASE MAPPING : nominee_name ( VARCHAR ) 
    public void setNomineeName( String nomineeName ) {
        this.nomineeName = nomineeName;
    }
    public String getNomineeName() {
        return this.nomineeName;
    }

    //--- DATABASE MAPPING : nominee_so_wo_do ( VARCHAR ) 
    public void setNomineeSoWoDo( String nomineeSoWoDo ) {
        this.nomineeSoWoDo = nomineeSoWoDo;
    }
    public String getNomineeSoWoDo() {
        return this.nomineeSoWoDo;
    }

    //--- DATABASE MAPPING : nominee_date_of_birth ( DATE ) 
    public void setNomineeDateOfBirth( Date nomineeDateOfBirth ) {
        this.nomineeDateOfBirth = nomineeDateOfBirth;
    }
    public Date getNomineeDateOfBirth() {
        return this.nomineeDateOfBirth;
    }

    //--- DATABASE MAPPING : nominee_address ( LONGTEXT ) 
    public void setNomineeAddress( String nomineeAddress ) {
        this.nomineeAddress = nomineeAddress;
    }
    public String getNomineeAddress() {
        return this.nomineeAddress;
    }

    //--- DATABASE MAPPING : nominee_contact_number ( VARCHAR ) 
    public void setNomineeContactNumber( String nomineeContactNumber ) {
        this.nomineeContactNumber = nomineeContactNumber;
    }
    public String getNomineeContactNumber() {
        return this.nomineeContactNumber;
    }

    //--- DATABASE MAPPING : nominee_gender ( VARCHAR ) 
    public void setNomineeGender( String nomineeGender ) {
        this.nomineeGender = nomineeGender;
    }
    public String getNomineeGender() {
        return this.nomineeGender;
    }

    //--- DATABASE MAPPING : nominee_relation_with_member ( VARCHAR ) 
    public void setNomineeRelationWithMember( String nomineeRelationWithMember ) {
        this.nomineeRelationWithMember = nomineeRelationWithMember;
    }
    public String getNomineeRelationWithMember() {
        return this.nomineeRelationWithMember;
    }

    //--- DATABASE MAPPING : bank_acc_no ( VARCHAR ) 
    public void setBankAccNo( String bankAccNo ) {
        this.bankAccNo = bankAccNo;
    }
    public String getBankAccNo() {
        return this.bankAccNo;
    }

    //--- DATABASE MAPPING : ifsc_code ( VARCHAR ) 
    public void setIfscCode( String ifscCode ) {
        this.ifscCode = ifscCode;
    }
    public String getIfscCode() {
        return this.ifscCode;
    }

    //--- DATABASE MAPPING : type_of_acc ( VARCHAR ) 
    public void setTypeOfAcc( String typeOfAcc ) {
        this.typeOfAcc = typeOfAcc;
    }
    public String getTypeOfAcc() {
        return this.typeOfAcc;
    }

    //--- DATABASE MAPPING : bank_name ( VARCHAR ) 
    public void setBankName( String bankName ) {
        this.bankName = bankName;
    }
    public String getBankName() {
        return this.bankName;
    }

    //--- DATABASE MAPPING : branch_and_address ( LONGTEXT ) 
    public void setBranchAndAddress( String branchAndAddress ) {
        this.branchAndAddress = branchAndAddress;
    }
    public String getBranchAndAddress() {
        return this.branchAndAddress;
    }

    //--- DATABASE MAPPING : receipt_no ( VARCHAR ) 
    public void setReceiptNo( String receiptNo ) {
        this.receiptNo = receiptNo;
    }
    public String getReceiptNo() {
        return this.receiptNo;
    }

    //--- DATABASE MAPPING : verified_by ( VARCHAR ) 
    public void setVerifiedBy( String verifiedBy ) {
        this.verifiedBy = verifiedBy;
    }
    public String getVerifiedBy() {
        return this.verifiedBy;
    }

    //--- DATABASE MAPPING : countpk ( BIGINT ) 
    public void setCountpk( Long countpk ) {
        this.countpk = countpk;
    }
    public Long getCountpk() {
        return this.countpk;
    }

    //--- DATABASE MAPPING : prefixcolumn ( VARCHAR ) 
    public void setPrefixcolumn( String prefixcolumn ) {
        this.prefixcolumn = prefixcolumn;
    }
    public String getPrefixcolumn() {
        return this.prefixcolumn;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : modified_date ( DATETIME ) 
    public void setModifiedDate( Date modifiedDate ) {
        this.modifiedDate = modifiedDate;
    }
    public Date getModifiedDate() {
        return this.modifiedDate;
    }

    //--- DATABASE MAPPING : user_id ( VARCHAR ) 
    public void setUserId( String userId ) {
        this.userId = userId;
    }
    public String getUserId() {
        return this.userId;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    public void setMemberCurrentDate( Date memberCurrentDate ) {
        this.memberCurrentDate = memberCurrentDate;
    }
    public Date getMemberCurrentDate() {
        return this.memberCurrentDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setTblMembershipForm( TblMembershipFormEntity tblMembershipForm ) {
        this.tblMembershipForm = tblMembershipForm;
    }
    public TblMembershipFormEntity getTblMembershipForm() {
        return this.tblMembershipForm;
    }

    public void setListOfTblPlotMaster( List<TblPlotMasterEntity> listOfTblPlotMaster ) {
        this.listOfTblPlotMaster = listOfTblPlotMaster;
    }
    public List<TblPlotMasterEntity> getListOfTblPlotMaster() {
        return this.listOfTblPlotMaster;
    }

    public void setListOfTblReceiptMaster( List<TblReceiptMasterEntity> listOfTblReceiptMaster ) {
        this.listOfTblReceiptMaster = listOfTblReceiptMaster;
    }
    public List<TblReceiptMasterEntity> getListOfTblReceiptMaster() {
        return this.listOfTblReceiptMaster;
    }

    public void setListOfTblMembershipForm( List<TblMembershipFormEntity> listOfTblMembershipForm ) {
        this.listOfTblMembershipForm = listOfTblMembershipForm;
    }
    public List<TblMembershipFormEntity> getListOfTblMembershipForm() {
        return this.listOfTblMembershipForm;
    }

    public void setListOfTblBusiAssoMaster( List<TblBusiAssoMasterEntity> listOfTblBusiAssoMaster ) {
        this.listOfTblBusiAssoMaster = listOfTblBusiAssoMaster;
    }
    public List<TblBusiAssoMasterEntity> getListOfTblBusiAssoMaster() {
        return this.listOfTblBusiAssoMaster;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(memberId);
        sb.append("]:"); 
        sb.append(memberPrefix);
        sb.append("|");
        sb.append(memberName);
        sb.append("|");
        sb.append(memberSoWoDo);
        sb.append("|");
        sb.append(memberDateOfBirth);
        sb.append("|");
        sb.append(memberNationality);
        // attribute 'memberResidence' not usable (type = String Long Text)
        // attribute 'memberOfficeAddress' not usable (type = String Long Text)
        sb.append("|");
        sb.append(memberResidentalStatus);
        sb.append("|");
        sb.append(memberPan);
        sb.append("|");
        sb.append(memberOccupation);
        sb.append("|");
        sb.append(memberContactMobile);
        // attribute 'memberContactResidence' not usable (type = String Long Text)
        // attribute 'memberContactOffice' not usable (type = String Long Text)
        sb.append("|");
        sb.append(memberContactOthers);
        sb.append("|");
        sb.append(memberContactEmail);
        sb.append("|");
        sb.append(memberMembershipThrough);
        sb.append("|");
        sb.append(nomineeName);
        sb.append("|");
        sb.append(nomineeSoWoDo);
        sb.append("|");
        sb.append(nomineeDateOfBirth);
        // attribute 'nomineeAddress' not usable (type = String Long Text)
        sb.append("|");
        sb.append(nomineeContactNumber);
        sb.append("|");
        sb.append(nomineeGender);
        sb.append("|");
        sb.append(nomineeRelationWithMember);
        sb.append("|");
        sb.append(bankAccNo);
        sb.append("|");
        sb.append(ifscCode);
        sb.append("|");
        sb.append(typeOfAcc);
        sb.append("|");
        sb.append(bankName);
        // attribute 'branchAndAddress' not usable (type = String Long Text)
        sb.append("|");
        sb.append(receiptNo);
        sb.append("|");
        sb.append(verifiedBy);
        sb.append("|");
        sb.append(countpk);
        sb.append("|");
        sb.append(prefixcolumn);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(modifiedDate);
        sb.append("|");
        sb.append(userId);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(memberCurrentDate);
        return sb.toString(); 
    } 

}
