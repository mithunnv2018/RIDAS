/*
 * Created on 29 Feb 2016 ( Time 17:46:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.ridas.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "tbl_user_role_master"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="tbl_user_role_master", catalog="ridasindiaproperties" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TblUserRoleMasterEntity.countAll", query="SELECT COUNT(x) FROM TblUserRoleMasterEntity x" )
} )
public class TblUserRoleMasterEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="user_role_id", nullable=false, length=100)
    private String     userRoleId   ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user_role_name", length=100)
    private String     userRoleName ;

    @Column(name="user_role_module_name", length=100)
    private String     userRoleModuleName ;

    @Column(name="status", length=100)
    private String     status       ;

    @Column(name="user_id", length=100)
    private String     userId       ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified_date")
    private Date       modifiedDate ;

    @Column(name="prefixcolumn", length=500)
    private String     prefixcolumn ;

    @Column(name="countpk")
    private Long       countpk      ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
//done as on 13 feb 2016 added below 3 lines to set "fetchtype" to "Eager".
	@OneToMany(mappedBy="tblUserMaster", targetEntity=TblUserRoleDetailsEntity.class,fetch=FetchType.EAGER)
    private List<TblUserRoleDetailsEntity> listOfTblUserRoleDetails;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TblUserRoleMasterEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUserRoleId( String userRoleId ) {
        this.userRoleId = userRoleId ;
    }
    public String getUserRoleId() {
        return this.userRoleId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user_role_name ( VARCHAR ) 
    public void setUserRoleName( String userRoleName ) {
        this.userRoleName = userRoleName;
    }
    public String getUserRoleName() {
        return this.userRoleName;
    }

    //--- DATABASE MAPPING : user_role_module_name ( VARCHAR ) 
    public void setUserRoleModuleName( String userRoleModuleName ) {
        this.userRoleModuleName = userRoleModuleName;
    }
    public String getUserRoleModuleName() {
        return this.userRoleModuleName;
    }

    //--- DATABASE MAPPING : status ( VARCHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : user_id ( VARCHAR ) 
    public void setUserId( String userId ) {
        this.userId = userId;
    }
    public String getUserId() {
        return this.userId;
    }

    //--- DATABASE MAPPING : create_date ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : modified_date ( DATETIME ) 
    public void setModifiedDate( Date modifiedDate ) {
        this.modifiedDate = modifiedDate;
    }
    public Date getModifiedDate() {
        return this.modifiedDate;
    }

    //--- DATABASE MAPPING : prefixcolumn ( VARCHAR ) 
    public void setPrefixcolumn( String prefixcolumn ) {
        this.prefixcolumn = prefixcolumn;
    }
    public String getPrefixcolumn() {
        return this.prefixcolumn;
    }

    //--- DATABASE MAPPING : countpk ( BIGINT ) 
    public void setCountpk( Long countpk ) {
        this.countpk = countpk;
    }
    public Long getCountpk() {
        return this.countpk;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfTblUserRoleDetails( List<TblUserRoleDetailsEntity> listOfTblUserRoleDetails ) {
        this.listOfTblUserRoleDetails = listOfTblUserRoleDetails;
    }
    public List<TblUserRoleDetailsEntity> getListOfTblUserRoleDetails() {
        return this.listOfTblUserRoleDetails;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(userRoleId);
        sb.append("]:"); 
        sb.append(userRoleName);
        sb.append("|");
        sb.append(userRoleModuleName);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(userId);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(modifiedDate);
        sb.append("|");
        sb.append(prefixcolumn);
        sb.append("|");
        sb.append(countpk);
        return sb.toString(); 
    } 

}
