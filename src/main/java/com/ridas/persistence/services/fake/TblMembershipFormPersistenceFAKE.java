/*
 * Created on 29 Feb 2016 ( Time 17:46:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.persistence.services.fake;

import java.util.List;
import java.util.Map;

import com.ridas.bean.jpa.TblMembershipFormEntity;
import com.ridas.persistence.commons.fake.GenericFakeService;
import com.ridas.persistence.services.TblMembershipFormPersistence;

/**
 * Fake persistence service implementation ( entity "TblMembershipForm" )
 *
 * @author Telosys Tools Generator
 */
public class TblMembershipFormPersistenceFAKE extends GenericFakeService<TblMembershipFormEntity> implements TblMembershipFormPersistence {

	public TblMembershipFormPersistenceFAKE () {
		super(TblMembershipFormEntity.class);
	}
	
	protected TblMembershipFormEntity buildEntity(int index) {
		TblMembershipFormEntity entity = new TblMembershipFormEntity();
		// Init fields with mock values
		entity.setMemberId( nextString() ) ;
		entity.setMemberPrefix( nextString() ) ;
		entity.setMemberName( nextString() ) ;
		entity.setMemberSoWoDo( nextString() ) ;
		entity.setMemberDateOfBirth( nextDate() ) ;
		entity.setMemberNationality( nextString() ) ;
		entity.setMemberResidence( nextString() ) ;
		entity.setMemberOfficeAddress( nextString() ) ;
		entity.setMemberResidentalStatus( nextString() ) ;
		entity.setMemberPan( nextString() ) ;
		entity.setMemberOccupation( nextString() ) ;
		entity.setMemberContactMobile( nextString() ) ;
		entity.setMemberContactResidence( nextString() ) ;
		entity.setMemberContactOffice( nextString() ) ;
		entity.setMemberContactOthers( nextString() ) ;
		entity.setMemberContactEmail( nextString() ) ;
		entity.setMemberMembershipThrough( nextString() ) ;
		entity.setNomineeName( nextString() ) ;
		entity.setNomineeSoWoDo( nextString() ) ;
		entity.setNomineeDateOfBirth( nextDate() ) ;
		entity.setNomineeAddress( nextString() ) ;
		entity.setNomineeContactNumber( nextString() ) ;
		entity.setNomineeGender( nextString() ) ;
		entity.setNomineeRelationWithMember( nextString() ) ;
		entity.setBankAccNo( nextString() ) ;
		entity.setIfscCode( nextString() ) ;
		entity.setTypeOfAcc( nextString() ) ;
		entity.setBankName( nextString() ) ;
		entity.setBranchAndAddress( nextString() ) ;
		entity.setReceiptNo( nextString() ) ;
		entity.setVerifiedBy( nextString() ) ;
		entity.setCountpk( nextLong() ) ;
		entity.setPrefixcolumn( nextString() ) ;
		entity.setCreateDate( nextDate() ) ;
		entity.setModifiedDate( nextDate() ) ;
		entity.setUserId( nextString() ) ;
		entity.setStatus( nextString() ) ;
		return entity ;
	}
	
	
	public boolean delete(TblMembershipFormEntity entity) {
		log("delete ( TblMembershipFormEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( String memberId ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(TblMembershipFormEntity entity) {
		log("insert ( TblMembershipFormEntity : " + entity + ")" ) ;
	}

	public TblMembershipFormEntity load( String memberId ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<TblMembershipFormEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<TblMembershipFormEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<TblMembershipFormEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public TblMembershipFormEntity save(TblMembershipFormEntity entity) {
		log("insert ( TblMembershipFormEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<TblMembershipFormEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

	@Override
	public List<TblMembershipFormEntity> findAllWhereClause() {
		// TODO Auto-generated method stub
		return null;
	}

/**
	 * 	done as on 13 feb 2016 added for TblUserMaster for retrieving user details for login
    */
}
