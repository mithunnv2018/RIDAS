/*
 * Created on 29 Feb 2016 ( Time 17:46:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.ridas.bean.TblPlotRecMaster;
import com.ridas.bean.jpa.TblPlotRecMasterEntity;
import com.ridas.bean.jpa.TblReceiptMasterEntity;
import com.ridas.bean.jpa.TblPlotMasterEntity;
import com.ridas.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class TblPlotRecMasterServiceMapperTest {

	private TblPlotRecMasterServiceMapper tblPlotRecMasterServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		tblPlotRecMasterServiceMapper = new TblPlotRecMasterServiceMapper();
		tblPlotRecMasterServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'TblPlotRecMasterEntity' to 'TblPlotRecMaster'
	 * @param tblPlotRecMasterEntity
	 */
	@Test
	public void testMapTblPlotRecMasterEntityToTblPlotRecMaster() {
		// Given
		TblPlotRecMasterEntity tblPlotRecMasterEntity = new TblPlotRecMasterEntity();
		tblPlotRecMasterEntity.setCountpk(mockValues.nextLong());
		tblPlotRecMasterEntity.setPrefixcolumn(mockValues.nextString(100));
		tblPlotRecMasterEntity.setCreateDate(mockValues.nextDate());
		tblPlotRecMasterEntity.setModifiedDate(mockValues.nextDate());
		tblPlotRecMasterEntity.setStatus(mockValues.nextString(100));
		tblPlotRecMasterEntity.setUserId(mockValues.nextString(100));
		tblPlotRecMasterEntity.setTblReceiptMaster(new TblReceiptMasterEntity());
		tblPlotRecMasterEntity.getTblReceiptMaster().setReceiptPk(mockValues.nextString(50));
		tblPlotRecMasterEntity.setTblPlotMaster(new TblPlotMasterEntity());
		tblPlotRecMasterEntity.getTblPlotMaster().setPlotPk(mockValues.nextInteger());
		
		// When
		TblPlotRecMaster tblPlotRecMaster = tblPlotRecMasterServiceMapper.mapTblPlotRecMasterEntityToTblPlotRecMaster(tblPlotRecMasterEntity);
		
		// Then
		assertEquals(tblPlotRecMasterEntity.getCountpk(), tblPlotRecMaster.getCountpk());
		assertEquals(tblPlotRecMasterEntity.getPrefixcolumn(), tblPlotRecMaster.getPrefixcolumn());
		assertEquals(tblPlotRecMasterEntity.getCreateDate(), tblPlotRecMaster.getCreateDate());
		assertEquals(tblPlotRecMasterEntity.getModifiedDate(), tblPlotRecMaster.getModifiedDate());
		assertEquals(tblPlotRecMasterEntity.getStatus(), tblPlotRecMaster.getStatus());
		assertEquals(tblPlotRecMasterEntity.getUserId(), tblPlotRecMaster.getUserId());
		assertEquals(tblPlotRecMasterEntity.getTblReceiptMaster().getReceiptPk(), tblPlotRecMaster.getReceiptPk());
		assertEquals(tblPlotRecMasterEntity.getTblPlotMaster().getPlotPk(), tblPlotRecMaster.getPlotPk());
	}
	
	/**
	 * Test : Mapping from 'TblPlotRecMaster' to 'TblPlotRecMasterEntity'
	 */
	@Test
	public void testMapTblPlotRecMasterToTblPlotRecMasterEntity() {
		// Given
		TblPlotRecMaster tblPlotRecMaster = new TblPlotRecMaster();
		tblPlotRecMaster.setCountpk(mockValues.nextLong());
		tblPlotRecMaster.setPrefixcolumn(mockValues.nextString(100));
		tblPlotRecMaster.setCreateDate(mockValues.nextDate());
		tblPlotRecMaster.setModifiedDate(mockValues.nextDate());
		tblPlotRecMaster.setStatus(mockValues.nextString(100));
		tblPlotRecMaster.setUserId(mockValues.nextString(100));
		tblPlotRecMaster.setReceiptPk(mockValues.nextString(50));
		tblPlotRecMaster.setPlotPk(mockValues.nextInteger());

		TblPlotRecMasterEntity tblPlotRecMasterEntity = new TblPlotRecMasterEntity();
		
		// When
		tblPlotRecMasterServiceMapper.mapTblPlotRecMasterToTblPlotRecMasterEntity(tblPlotRecMaster, tblPlotRecMasterEntity);
		
		// Then
		assertEquals(tblPlotRecMaster.getCountpk(), tblPlotRecMasterEntity.getCountpk());
		assertEquals(tblPlotRecMaster.getPrefixcolumn(), tblPlotRecMasterEntity.getPrefixcolumn());
		assertEquals(tblPlotRecMaster.getCreateDate(), tblPlotRecMasterEntity.getCreateDate());
		assertEquals(tblPlotRecMaster.getModifiedDate(), tblPlotRecMasterEntity.getModifiedDate());
		assertEquals(tblPlotRecMaster.getStatus(), tblPlotRecMasterEntity.getStatus());
		assertEquals(tblPlotRecMaster.getUserId(), tblPlotRecMasterEntity.getUserId());
		assertEquals(tblPlotRecMaster.getReceiptPk(), tblPlotRecMasterEntity.getTblReceiptMaster().getReceiptPk());
		assertEquals(tblPlotRecMaster.getPlotPk(), tblPlotRecMasterEntity.getTblPlotMaster().getPlotPk());
	}

}