/*
 * Created on 29 Feb 2016 ( Time 17:46:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.ridas.bean.TblUserRoleMaster;
import com.ridas.bean.jpa.TblUserRoleMasterEntity;
import com.ridas.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class TblUserRoleMasterServiceMapperTest {

	private TblUserRoleMasterServiceMapper tblUserRoleMasterServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		tblUserRoleMasterServiceMapper = new TblUserRoleMasterServiceMapper();
		tblUserRoleMasterServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'TblUserRoleMasterEntity' to 'TblUserRoleMaster'
	 * @param tblUserRoleMasterEntity
	 */
	@Test
	public void testMapTblUserRoleMasterEntityToTblUserRoleMaster() {
		// Given
		TblUserRoleMasterEntity tblUserRoleMasterEntity = new TblUserRoleMasterEntity();
		tblUserRoleMasterEntity.setUserRoleName(mockValues.nextString(100));
		tblUserRoleMasterEntity.setUserRoleModuleName(mockValues.nextString(100));
		tblUserRoleMasterEntity.setStatus(mockValues.nextString(100));
		tblUserRoleMasterEntity.setUserId(mockValues.nextString(100));
		tblUserRoleMasterEntity.setCreateDate(mockValues.nextDate());
		tblUserRoleMasterEntity.setModifiedDate(mockValues.nextDate());
		tblUserRoleMasterEntity.setPrefixcolumn(mockValues.nextString(500));
		tblUserRoleMasterEntity.setCountpk(mockValues.nextLong());
		
		// When
		TblUserRoleMaster tblUserRoleMaster = tblUserRoleMasterServiceMapper.mapTblUserRoleMasterEntityToTblUserRoleMaster(tblUserRoleMasterEntity);
		
		// Then
		assertEquals(tblUserRoleMasterEntity.getUserRoleName(), tblUserRoleMaster.getUserRoleName());
		assertEquals(tblUserRoleMasterEntity.getUserRoleModuleName(), tblUserRoleMaster.getUserRoleModuleName());
		assertEquals(tblUserRoleMasterEntity.getStatus(), tblUserRoleMaster.getStatus());
		assertEquals(tblUserRoleMasterEntity.getUserId(), tblUserRoleMaster.getUserId());
		assertEquals(tblUserRoleMasterEntity.getCreateDate(), tblUserRoleMaster.getCreateDate());
		assertEquals(tblUserRoleMasterEntity.getModifiedDate(), tblUserRoleMaster.getModifiedDate());
		assertEquals(tblUserRoleMasterEntity.getPrefixcolumn(), tblUserRoleMaster.getPrefixcolumn());
		assertEquals(tblUserRoleMasterEntity.getCountpk(), tblUserRoleMaster.getCountpk());
	}
	
	/**
	 * Test : Mapping from 'TblUserRoleMaster' to 'TblUserRoleMasterEntity'
	 */
	@Test
	public void testMapTblUserRoleMasterToTblUserRoleMasterEntity() {
		// Given
		TblUserRoleMaster tblUserRoleMaster = new TblUserRoleMaster();
		tblUserRoleMaster.setUserRoleName(mockValues.nextString(100));
		tblUserRoleMaster.setUserRoleModuleName(mockValues.nextString(100));
		tblUserRoleMaster.setStatus(mockValues.nextString(100));
		tblUserRoleMaster.setUserId(mockValues.nextString(100));
		tblUserRoleMaster.setCreateDate(mockValues.nextDate());
		tblUserRoleMaster.setModifiedDate(mockValues.nextDate());
		tblUserRoleMaster.setPrefixcolumn(mockValues.nextString(500));
		tblUserRoleMaster.setCountpk(mockValues.nextLong());

		TblUserRoleMasterEntity tblUserRoleMasterEntity = new TblUserRoleMasterEntity();
		
		// When
		tblUserRoleMasterServiceMapper.mapTblUserRoleMasterToTblUserRoleMasterEntity(tblUserRoleMaster, tblUserRoleMasterEntity);
		
		// Then
		assertEquals(tblUserRoleMaster.getUserRoleName(), tblUserRoleMasterEntity.getUserRoleName());
		assertEquals(tblUserRoleMaster.getUserRoleModuleName(), tblUserRoleMasterEntity.getUserRoleModuleName());
		assertEquals(tblUserRoleMaster.getStatus(), tblUserRoleMasterEntity.getStatus());
		assertEquals(tblUserRoleMaster.getUserId(), tblUserRoleMasterEntity.getUserId());
		assertEquals(tblUserRoleMaster.getCreateDate(), tblUserRoleMasterEntity.getCreateDate());
		assertEquals(tblUserRoleMaster.getModifiedDate(), tblUserRoleMasterEntity.getModifiedDate());
		assertEquals(tblUserRoleMaster.getPrefixcolumn(), tblUserRoleMasterEntity.getPrefixcolumn());
		assertEquals(tblUserRoleMaster.getCountpk(), tblUserRoleMasterEntity.getCountpk());
	}

}