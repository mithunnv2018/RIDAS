/*
 * Created on 29 Feb 2016 ( Time 17:46:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.ridas.bean.TblBusiAssoMaster;
import com.ridas.bean.jpa.TblBusiAssoMasterEntity;
import com.ridas.bean.jpa.TblMembershipFormEntity;
import com.ridas.bean.jpa.TblReceiptMasterEntity;
import com.ridas.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class TblBusiAssoMasterServiceMapperTest {

	private TblBusiAssoMasterServiceMapper tblBusiAssoMasterServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		tblBusiAssoMasterServiceMapper = new TblBusiAssoMasterServiceMapper();
		tblBusiAssoMasterServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'TblBusiAssoMasterEntity' to 'TblBusiAssoMaster'
	 * @param tblBusiAssoMasterEntity
	 */
	@Test
	public void testMapTblBusiAssoMasterEntityToTblBusiAssoMaster() {
		// Given
		TblBusiAssoMasterEntity tblBusiAssoMasterEntity = new TblBusiAssoMasterEntity();
		tblBusiAssoMasterEntity.setCountpk(mockValues.nextLong());
		tblBusiAssoMasterEntity.setPrefixcolumn(mockValues.nextString(100));
		tblBusiAssoMasterEntity.setCreateDate(mockValues.nextDate());
		tblBusiAssoMasterEntity.setModifiedDate(mockValues.nextDate());
		tblBusiAssoMasterEntity.setStatus(mockValues.nextString(100));
		tblBusiAssoMasterEntity.setUserId(mockValues.nextString(100));
		tblBusiAssoMasterEntity.setTblMembershipForm(new TblMembershipFormEntity());
		tblBusiAssoMasterEntity.getTblMembershipForm().setMemberId(mockValues.nextString(50));
		tblBusiAssoMasterEntity.setTblReceiptMaster(new TblReceiptMasterEntity());
		tblBusiAssoMasterEntity.getTblReceiptMaster().setReceiptPk(mockValues.nextString(50));
		
		// When
		TblBusiAssoMaster tblBusiAssoMaster = tblBusiAssoMasterServiceMapper.mapTblBusiAssoMasterEntityToTblBusiAssoMaster(tblBusiAssoMasterEntity);
		
		// Then
		assertEquals(tblBusiAssoMasterEntity.getCountpk(), tblBusiAssoMaster.getCountpk());
		assertEquals(tblBusiAssoMasterEntity.getPrefixcolumn(), tblBusiAssoMaster.getPrefixcolumn());
		assertEquals(tblBusiAssoMasterEntity.getCreateDate(), tblBusiAssoMaster.getCreateDate());
		assertEquals(tblBusiAssoMasterEntity.getModifiedDate(), tblBusiAssoMaster.getModifiedDate());
		assertEquals(tblBusiAssoMasterEntity.getStatus(), tblBusiAssoMaster.getStatus());
		assertEquals(tblBusiAssoMasterEntity.getUserId(), tblBusiAssoMaster.getUserId());
		assertEquals(tblBusiAssoMasterEntity.getTblMembershipForm().getMemberId(), tblBusiAssoMaster.getMemberId());
		assertEquals(tblBusiAssoMasterEntity.getTblReceiptMaster().getReceiptPk(), tblBusiAssoMaster.getReceiptPk());
	}
	
	/**
	 * Test : Mapping from 'TblBusiAssoMaster' to 'TblBusiAssoMasterEntity'
	 */
	@Test
	public void testMapTblBusiAssoMasterToTblBusiAssoMasterEntity() {
		// Given
		TblBusiAssoMaster tblBusiAssoMaster = new TblBusiAssoMaster();
		tblBusiAssoMaster.setCountpk(mockValues.nextLong());
		tblBusiAssoMaster.setPrefixcolumn(mockValues.nextString(100));
		tblBusiAssoMaster.setCreateDate(mockValues.nextDate());
		tblBusiAssoMaster.setModifiedDate(mockValues.nextDate());
		tblBusiAssoMaster.setStatus(mockValues.nextString(100));
		tblBusiAssoMaster.setUserId(mockValues.nextString(100));
		tblBusiAssoMaster.setMemberId(mockValues.nextString(50));
		tblBusiAssoMaster.setReceiptPk(mockValues.nextString(50));

		TblBusiAssoMasterEntity tblBusiAssoMasterEntity = new TblBusiAssoMasterEntity();
		
		// When
		tblBusiAssoMasterServiceMapper.mapTblBusiAssoMasterToTblBusiAssoMasterEntity(tblBusiAssoMaster, tblBusiAssoMasterEntity);
		
		// Then
		assertEquals(tblBusiAssoMaster.getCountpk(), tblBusiAssoMasterEntity.getCountpk());
		assertEquals(tblBusiAssoMaster.getPrefixcolumn(), tblBusiAssoMasterEntity.getPrefixcolumn());
		assertEquals(tblBusiAssoMaster.getCreateDate(), tblBusiAssoMasterEntity.getCreateDate());
		assertEquals(tblBusiAssoMaster.getModifiedDate(), tblBusiAssoMasterEntity.getModifiedDate());
		assertEquals(tblBusiAssoMaster.getStatus(), tblBusiAssoMasterEntity.getStatus());
		assertEquals(tblBusiAssoMaster.getUserId(), tblBusiAssoMasterEntity.getUserId());
		assertEquals(tblBusiAssoMaster.getMemberId(), tblBusiAssoMasterEntity.getTblMembershipForm().getMemberId());
		assertEquals(tblBusiAssoMaster.getReceiptPk(), tblBusiAssoMasterEntity.getTblReceiptMaster().getReceiptPk());
	}

}