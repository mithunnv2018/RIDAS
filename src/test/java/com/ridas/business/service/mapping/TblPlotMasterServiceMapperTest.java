/*
 * Created on 29 Feb 2016 ( Time 17:46:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.ridas.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.ridas.bean.TblPlotMaster;
import com.ridas.bean.jpa.TblPlotMasterEntity;
import com.ridas.bean.jpa.TblMembershipFormEntity;
import com.ridas.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class TblPlotMasterServiceMapperTest {

	private TblPlotMasterServiceMapper tblPlotMasterServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		tblPlotMasterServiceMapper = new TblPlotMasterServiceMapper();
		tblPlotMasterServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'TblPlotMasterEntity' to 'TblPlotMaster'
	 * @param tblPlotMasterEntity
	 */
	@Test
	public void testMapTblPlotMasterEntityToTblPlotMaster() {
		// Given
		TblPlotMasterEntity tblPlotMasterEntity = new TblPlotMasterEntity();
		tblPlotMasterEntity.setPlotFatherhusbandName(mockValues.nextString(100));
		tblPlotMasterEntity.setPlotMothersName(mockValues.nextString(100));
		tblPlotMasterEntity.setPlotNameOfProject(mockValues.nextString(100));
		tblPlotMasterEntity.setPlotTypeOfProject(mockValues.nextString(100));
		tblPlotMasterEntity.setPlotArea(mockValues.nextString(500));
		tblPlotMasterEntity.setPlotRequiredArea(mockValues.nextString(500));
		tblPlotMasterEntity.setPlotIsfarmer(mockValues.nextString(50));
		tblPlotMasterEntity.setPlotFarmerState(mockValues.nextString(50));
		tblPlotMasterEntity.setPlotFarmerSyNo(mockValues.nextString(50));
		tblPlotMasterEntity.setPlotFarmerDistrict(mockValues.nextString(50));
		tblPlotMasterEntity.setPlotFarmerVillage(mockValues.nextString(50));
		tblPlotMasterEntity.setPlotDate(mockValues.nextDate());
		tblPlotMasterEntity.setPlotBookingDate(mockValues.nextDate());
		tblPlotMasterEntity.setPlotNo(mockValues.nextString(100));
		tblPlotMasterEntity.setPlotDeclarationDate(mockValues.nextDate());
		tblPlotMasterEntity.setPlotDeclarationPlace(mockValues.nextString(50));
		tblPlotMasterEntity.setCountpk(mockValues.nextLong());
		tblPlotMasterEntity.setPrefixcolumn(mockValues.nextString(100));
		tblPlotMasterEntity.setCreateDate(mockValues.nextDate());
		tblPlotMasterEntity.setModifiedDate(mockValues.nextDate());
		tblPlotMasterEntity.setUserId(mockValues.nextString(100));
		tblPlotMasterEntity.setStatus(mockValues.nextString(100));
		tblPlotMasterEntity.setTblMembershipForm(new TblMembershipFormEntity());
		tblPlotMasterEntity.getTblMembershipForm().setMemberId(mockValues.nextString(50));
		
		// When
		TblPlotMaster tblPlotMaster = tblPlotMasterServiceMapper.mapTblPlotMasterEntityToTblPlotMaster(tblPlotMasterEntity);
		
		// Then
		assertEquals(tblPlotMasterEntity.getPlotFatherhusbandName(), tblPlotMaster.getPlotFatherhusbandName());
		assertEquals(tblPlotMasterEntity.getPlotMothersName(), tblPlotMaster.getPlotMothersName());
		assertEquals(tblPlotMasterEntity.getPlotNameOfProject(), tblPlotMaster.getPlotNameOfProject());
		assertEquals(tblPlotMasterEntity.getPlotTypeOfProject(), tblPlotMaster.getPlotTypeOfProject());
		assertEquals(tblPlotMasterEntity.getPlotArea(), tblPlotMaster.getPlotArea());
		assertEquals(tblPlotMasterEntity.getPlotRequiredArea(), tblPlotMaster.getPlotRequiredArea());
		assertEquals(tblPlotMasterEntity.getPlotIsfarmer(), tblPlotMaster.getPlotIsfarmer());
		assertEquals(tblPlotMasterEntity.getPlotFarmerState(), tblPlotMaster.getPlotFarmerState());
		assertEquals(tblPlotMasterEntity.getPlotFarmerSyNo(), tblPlotMaster.getPlotFarmerSyNo());
		assertEquals(tblPlotMasterEntity.getPlotFarmerDistrict(), tblPlotMaster.getPlotFarmerDistrict());
		assertEquals(tblPlotMasterEntity.getPlotFarmerVillage(), tblPlotMaster.getPlotFarmerVillage());
		assertEquals(tblPlotMasterEntity.getPlotDate(), tblPlotMaster.getPlotDate());
		assertEquals(tblPlotMasterEntity.getPlotBookingDate(), tblPlotMaster.getPlotBookingDate());
		assertEquals(tblPlotMasterEntity.getPlotNo(), tblPlotMaster.getPlotNo());
		assertEquals(tblPlotMasterEntity.getPlotDeclarationDate(), tblPlotMaster.getPlotDeclarationDate());
		assertEquals(tblPlotMasterEntity.getPlotDeclarationPlace(), tblPlotMaster.getPlotDeclarationPlace());
		assertEquals(tblPlotMasterEntity.getCountpk(), tblPlotMaster.getCountpk());
		assertEquals(tblPlotMasterEntity.getPrefixcolumn(), tblPlotMaster.getPrefixcolumn());
		assertEquals(tblPlotMasterEntity.getCreateDate(), tblPlotMaster.getCreateDate());
		assertEquals(tblPlotMasterEntity.getModifiedDate(), tblPlotMaster.getModifiedDate());
		assertEquals(tblPlotMasterEntity.getUserId(), tblPlotMaster.getUserId());
		assertEquals(tblPlotMasterEntity.getStatus(), tblPlotMaster.getStatus());
		assertEquals(tblPlotMasterEntity.getTblMembershipForm().getMemberId(), tblPlotMaster.getMemberId());
	}
	
	/**
	 * Test : Mapping from 'TblPlotMaster' to 'TblPlotMasterEntity'
	 */
	@Test
	public void testMapTblPlotMasterToTblPlotMasterEntity() {
		// Given
		TblPlotMaster tblPlotMaster = new TblPlotMaster();
		tblPlotMaster.setPlotFatherhusbandName(mockValues.nextString(100));
		tblPlotMaster.setPlotMothersName(mockValues.nextString(100));
		tblPlotMaster.setPlotNameOfProject(mockValues.nextString(100));
		tblPlotMaster.setPlotTypeOfProject(mockValues.nextString(100));
		tblPlotMaster.setPlotArea(mockValues.nextString(500));
		tblPlotMaster.setPlotRequiredArea(mockValues.nextString(500));
		tblPlotMaster.setPlotIsfarmer(mockValues.nextString(50));
		tblPlotMaster.setPlotFarmerState(mockValues.nextString(50));
		tblPlotMaster.setPlotFarmerSyNo(mockValues.nextString(50));
		tblPlotMaster.setPlotFarmerDistrict(mockValues.nextString(50));
		tblPlotMaster.setPlotFarmerVillage(mockValues.nextString(50));
		tblPlotMaster.setPlotDate(mockValues.nextDate());
		tblPlotMaster.setPlotBookingDate(mockValues.nextDate());
		tblPlotMaster.setPlotNo(mockValues.nextString(100));
		tblPlotMaster.setPlotDeclarationDate(mockValues.nextDate());
		tblPlotMaster.setPlotDeclarationPlace(mockValues.nextString(50));
		tblPlotMaster.setCountpk(mockValues.nextLong());
		tblPlotMaster.setPrefixcolumn(mockValues.nextString(100));
		tblPlotMaster.setCreateDate(mockValues.nextDate());
		tblPlotMaster.setModifiedDate(mockValues.nextDate());
		tblPlotMaster.setUserId(mockValues.nextString(100));
		tblPlotMaster.setStatus(mockValues.nextString(100));
		tblPlotMaster.setMemberId(mockValues.nextString(50));

		TblPlotMasterEntity tblPlotMasterEntity = new TblPlotMasterEntity();
		
		// When
		tblPlotMasterServiceMapper.mapTblPlotMasterToTblPlotMasterEntity(tblPlotMaster, tblPlotMasterEntity);
		
		// Then
		assertEquals(tblPlotMaster.getPlotFatherhusbandName(), tblPlotMasterEntity.getPlotFatherhusbandName());
		assertEquals(tblPlotMaster.getPlotMothersName(), tblPlotMasterEntity.getPlotMothersName());
		assertEquals(tblPlotMaster.getPlotNameOfProject(), tblPlotMasterEntity.getPlotNameOfProject());
		assertEquals(tblPlotMaster.getPlotTypeOfProject(), tblPlotMasterEntity.getPlotTypeOfProject());
		assertEquals(tblPlotMaster.getPlotArea(), tblPlotMasterEntity.getPlotArea());
		assertEquals(tblPlotMaster.getPlotRequiredArea(), tblPlotMasterEntity.getPlotRequiredArea());
		assertEquals(tblPlotMaster.getPlotIsfarmer(), tblPlotMasterEntity.getPlotIsfarmer());
		assertEquals(tblPlotMaster.getPlotFarmerState(), tblPlotMasterEntity.getPlotFarmerState());
		assertEquals(tblPlotMaster.getPlotFarmerSyNo(), tblPlotMasterEntity.getPlotFarmerSyNo());
		assertEquals(tblPlotMaster.getPlotFarmerDistrict(), tblPlotMasterEntity.getPlotFarmerDistrict());
		assertEquals(tblPlotMaster.getPlotFarmerVillage(), tblPlotMasterEntity.getPlotFarmerVillage());
		assertEquals(tblPlotMaster.getPlotDate(), tblPlotMasterEntity.getPlotDate());
		assertEquals(tblPlotMaster.getPlotBookingDate(), tblPlotMasterEntity.getPlotBookingDate());
		assertEquals(tblPlotMaster.getPlotNo(), tblPlotMasterEntity.getPlotNo());
		assertEquals(tblPlotMaster.getPlotDeclarationDate(), tblPlotMasterEntity.getPlotDeclarationDate());
		assertEquals(tblPlotMaster.getPlotDeclarationPlace(), tblPlotMasterEntity.getPlotDeclarationPlace());
		assertEquals(tblPlotMaster.getCountpk(), tblPlotMasterEntity.getCountpk());
		assertEquals(tblPlotMaster.getPrefixcolumn(), tblPlotMasterEntity.getPrefixcolumn());
		assertEquals(tblPlotMaster.getCreateDate(), tblPlotMasterEntity.getCreateDate());
		assertEquals(tblPlotMaster.getModifiedDate(), tblPlotMasterEntity.getModifiedDate());
		assertEquals(tblPlotMaster.getUserId(), tblPlotMasterEntity.getUserId());
		assertEquals(tblPlotMaster.getStatus(), tblPlotMasterEntity.getStatus());
		assertEquals(tblPlotMaster.getMemberId(), tblPlotMasterEntity.getTblMembershipForm().getMemberId());
	}

}